@using MovieApp.Shared.Components;
@using System.Text.Json.Serialization;
@inject HttpClient httpClient;
@inject NavigationManager NavigationManager;
@page "/search-results/{*query}";

<Header />

<WelcomeArea />

<div class="row container-fluid">

    <h3>Search results...</h3>

        @if (movies.Results is null) {
            <h3 class="">Woops... Nothing to see here, try again!</h3>
        } else {
            @foreach (var movie in movies.Results) {
                @if (movie.PosterPath != null) {
                    <div class="col-md-3 pb-3">
                        <a href="#" @onclick="@(() => { NavigationManager.NavigateTo($"/movie/{@movie.Title}"); })" @onclick:preventDefault><img class="img-fluid rounded" src="@($"https://image.tmdb.org/t/p/w500/{movie.PosterPath}")" alt="@movie.Title" /></a>
                    </div>
                }
                
            }
        }
</div>

<Choices />

<Footer />


@code {

    [Parameter]
    public string? query { get; set; }

    private MoviesResponse movies = new MoviesResponse();

    protected override async Task OnInitializedAsync() 
    {
        movies = await httpClient.GetFromJsonAsync<MoviesResponse>($"https://api.themoviedb.org/3/search/movie?api_key=3d16f1e91053992401099962ac5650c9&language=en-US&query={query}&page=1&include_adult=false");
    }

    public class MoviesResponse
    {
        public int Page { get; set; }
        public List<Movie> Results { get; set; } = new List<Movie>();
    }

    public class Movie
    {
        [JsonPropertyName("original_title")]
        public string? Title { get; set; }

        [JsonPropertyName("poster_path")]
        public string? PosterPath { get; set; }

        public string PosterPathAlt { 
            set { PosterPath = value; } 
        }
    }
}