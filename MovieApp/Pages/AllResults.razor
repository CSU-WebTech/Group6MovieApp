@using MovieApp.Shared.Components;
@using System.Text.Json.Serialization;
@inject HttpClient httpClient;
@inject NavigationManager NavigationManager;
@page "/movie/{id:int}";

<Header />

<WelcomeArea />

<div class="container-fluid">

@foreach (var movie in movies.Results) {

    <h3>Movie Rating: @movie.Title</h3>

        <div class="col-md-3 pb-3">
            <img class="img-fluid rounded" src="@($"https://image.tmdb.org/t/p/w500/{movie.PosterPath}")" alt="@movie.Title" />
            <div class="row mt-2 justify-content-center" id="star-row">
                @for (int i = 0; i < (@movie.VoteAverage / 2); i++) 
                {
                    <i class="fa-solid fa-star" style="color: #e46b6b; width: inherit;"></i>
                } 
            </div>
        </div>
        <p>@movie.Overview</p>
}
</div>

<Categories />

<Footer />


@code {

    [Parameter]
    public int id { get; set; }

    private MoviesResponse movies;

    protected override async Task OnInitializedAsync() 
    {
        movies = await httpClient.GetFromJsonAsync<MoviesResponse>($"https://api.themoviedb.org/3/movie/{id}?api_key=3d16f1e91053992401099962ac5650c9&language=en-US");
    }

    public class MoviesResponse
    {
        public int Page { get; set; }
        public List<Movie> Results { get; set; }
    }

    public class Movie
    {
        [JsonPropertyName("id")]
        public int Id { get; set; }

        [JsonPropertyName("original_title")]
        public string Title { get; set; }

        [JsonPropertyName("overview")]
        public string Overview { get; set; }

        [JsonPropertyName("vote_average")]
        public double VoteAverage { get; set; }

        public string PosterPath { get; set; }
        [JsonPropertyName("poster_path")]
        public string PosterPathAlt { 
            set { PosterPath = value; } 
        }
    }
}