@using System.Text.Json.Serialization;
@using MovieApp.Shared.Components;
@using MovieApp.Models;
@using MovieApp.Clients;
@inject MovieClient MovieClient;
@inject NavigationManager NavigationManager;
@inject HttpClient httpClient
@page "/thriller";

@if (movies == null)
{
    <p>Loading movies...</p>
} else
    {

    <Header />
    
    <WelcomeArea />

    <div id="movie-image-container" class="row container-fluid">
        <h3>Thriller Movies</h3>
            @foreach (var movie in movies.Results) 
            {
                <div class="col-md-3 pb-3">
                    <a href="#" @onclick="@(() => { NavigationManager.NavigateTo($"/movie/{@movie.Title}"); })" @onclick:preventDefault><img class="img-fluid rounded" src="@($"https://image.tmdb.org/t/p/w500/{movie.PosterPath}")" alt="@movie.Title" /></a>
                </div>
            }
    </div>

    <Choices />

    <Footer />
}

@code {
    private MoviesResponse movies;

    protected override async Task OnInitializedAsync()
    {
        movies = await httpClient.GetFromJsonAsync<MoviesResponse>("https://api.themoviedb.org/3/discover/movie?api_key=3d16f1e91053992401099962ac5650c9&language=en-US&sort_by=popularity.desc&page=1&with_genres=53");
    }

    public class MoviesResponse
    {
        public int Page { get; set; }
        public List<Movie> Results { get; set; }
    }

    public class Movie
    {
        public string Title { get; set; }
        public string Overview { get; set; }
        public string PosterPath { get; set; }
        [JsonPropertyName("poster_path")]
        public string PosterPathAlt { 
            set { PosterPath = value; } 
        }
    }
}