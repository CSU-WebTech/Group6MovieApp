@using System.Text.Json.Serialization;
@using MovieApp.Shared.Components;
@using MovieApp.Models;
@using MovieApp.Clients;
@inject MovieClient MovieClient;
@inject HttpClient httpClient;
@inject NavigationManager NavigationManager;
@page "/ratings";


<Header />
    
<WelcomeArea />

<div id="ratings-container" class="row container-fluid">
    <h3>All Ratings</h3>
        @foreach (var movie in movies.Results) 
        {
            <div class="col-md-2 pb-5">
                <a href="#" @onclick="@(() => { NavigationManager.NavigateTo($"/movie/{@movie.Title}"); })" @onclick:preventDefault><img class="img-fluid rounded" src="@($"https://image.tmdb.org/t/p/w500/{movie.PosterPath}")" alt="@movie.Title" /></a>
                <div class="row mt-2 justify-content-center" id="star-row">
                    @for (int i = 0; i < (@movie.VoteAverage / 2); i++) 
                    {
                        <i class="fa-solid fa-star" style="color: #e46b6b; width: inherit;"></i>
                    } 
                </div>
            </div>
        }
</div>

<Choices />

<Footer />

@code {
    private MoviesResponse movies = new MoviesResponse();

    protected override async Task OnInitializedAsync()
    {
        movies = await httpClient.GetFromJsonAsync<MoviesResponse>("https://api.themoviedb.org/3/movie/popular?api_key=3d16f1e91053992401099962ac5650c9&language=en-US&page=1");
    }

    public class MoviesResponse
    {
        public int Page { get; set; }
        public List<Movie> Results { get; set; } = new List<Movie>();
    }

    public class Movie
    {
        [JsonPropertyName("id")]
        public int Id { get; set; }

        [JsonPropertyName("original_title")]
        public string? Title { get; set; }

        [JsonPropertyName("vote_average")]
        public double? VoteAverage { get; set; }

        [JsonPropertyName("poster_path")]
        public string? PosterPath { get; set; }
        
    }
}